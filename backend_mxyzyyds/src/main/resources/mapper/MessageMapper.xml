<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.assignment.collect.dao.message.MessageMapper">
    <resultMap id="BaseResultMap" type="com.assignment.collect.po.message.Message">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="time" jdbcType="TIMESTAMP" property="time"/>
        <result column="status" jdbcType="CHAR" property="status"/>
        <result column="content" jdbcType="LONGVARCHAR" property="content"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from message
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.assignment.collect.po.message.Message"
            useGeneratedKeys="true">
        insert into message (id, user_id, time,
                             status, content)
        values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{time,jdbcType=TIMESTAMP},
                #{status,jdbcType=CHAR}, #{content,jdbcType=LONGVARCHAR})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.assignment.collect.po.message.Message">
        update message
        set user_id = #{userId,jdbcType=BIGINT},
            time    = #{time,jdbcType=TIMESTAMP},
            status  = #{status,jdbcType=CHAR},
            content = #{content,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select id, user_id, time, status, content
        from message
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select id, user_id, time, status, content
        from message
    </select>
    <select id="selectByUserId" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select id, user_id, time, status, content
        from message
        where user_id = #{userId,jdbcType=BIGINT}
        order by id desc
    </select>
    <select id="selectNewByUserId" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select id, user_id, time, status, content
        from message
        where user_id = #{userId,jdbcType=BIGINT} and status = 'NEW'
        order by id desc
    </select>
</mapper>
